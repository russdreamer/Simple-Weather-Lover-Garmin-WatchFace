import Toybox.Lang;
using Toybox.WatchUi;
using Toybox.WatchUi as Ui;
using Toybox.Graphics;
using Toybox.Graphics as Gfx;

module Rez {
    module Drawables {
        (:initialized) var StepsIcon as Symbol;
        (:initialized) var SnowIcon as Symbol;
        (:initialized) var ClearDayIcon as Symbol;
        (:initialized) var ClearNightIcon as Symbol;
        (:initialized) var CloudyIcon as Symbol;
        (:initialized) var HailIcon as Symbol;
        (:initialized) var LiteRainIcon as Symbol;
        (:initialized) var MistIcon as Symbol;
        (:initialized) var MostlyCloudyDayIcon as Symbol;
        (:initialized) var MostlyCloudyNightIcon as Symbol;
        (:initialized) var RainIcon as Symbol;
        (:initialized) var SnowRainIcon as Symbol;
        (:initialized) var TornadoIcon as Symbol;
        (:initialized) var WindIcon as Symbol;
        (:initialized) var ThunderIcon as Symbol;
        (:initialized) var UnknownPrecipitationIcon as Symbol;
        (:initialized) var LauncherIcon as Symbol;
    } // Drawables

    module Fonts {
        (:initialized) var time_font as Symbol;
        (:initialized) var data_font as Symbol;
    } // Fonts

    module JsonData {
    } // JsonData

    module Layouts {
        function WatchFace(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_custom_drawable_13338100511783834909 = new Background();

            var rez_cmp_local_text_TimeLabel = new WatchUi.Text({:identifier=>"TimeLabel", :color=>Graphics.COLOR_WHITE, :locX=>(240 * 0.5), :locY=>(240 * (20 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>Graphics.FONT_NUMBER_THAI_HOT});

            var rez_cmp_local_text_DateLabel = new WatchUi.Text({:identifier=>"DateLabel", :color=>Graphics.COLOR_WHITE, :locX=>(240 * (85 / 100.0)), :locY=>(240 * (55 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>Graphics.FONT_XTINY});

            var rez_cmp_local_text_StepsLabel = new WatchUi.Text({:identifier=>"StepsLabel", :color=>Graphics.COLOR_WHITE, :locX=>(240 * 0.5), :locY=>(240 * (80 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_LEFT, :font=>Graphics.FONT_XTINY});

            var rez_cmp_local_text_WeatherTimeLabel = new WatchUi.Text({:identifier=>"WeatherTimeLabel", :color=>Graphics.COLOR_WHITE, :locX=>(240 * 0.5), :locY=>(240 * (70 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>Graphics.FONT_XTINY});

            var rez_cmp_local_text_DetailedWeatherLabel = new WatchUi.Text({:identifier=>"DetailedWeatherLabel", :color=>Graphics.COLOR_WHITE, :locX=>(240 * 0.5), :locY=>(240 * (78 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>Graphics.FONT_XTINY});

            var rez_cmp_local_text_WeatherLabel = new WatchUi.Text({:identifier=>"WeatherLabel", :color=>Graphics.COLOR_WHITE, :locX=>(240 * 0.5), :locY=>(240 * (80 / 100.0)), :justification=>Graphics.TEXT_JUSTIFY_RIGHT, :font=>Graphics.FONT_XTINY});

            return [rez_cmp_local_custom_drawable_13338100511783834909, rez_cmp_local_text_TimeLabel, rez_cmp_local_text_DateLabel, rez_cmp_local_text_StepsLabel, rez_cmp_local_text_WeatherTimeLabel, rez_cmp_local_text_DetailedWeatherLabel, rez_cmp_local_text_WeatherLabel] as Array<WatchUi.Drawable>;
        }
    } // Layouts

    module Menus {
    } // Menus

    module Strings {
        (:initialized) var ColorLightGray as Symbol;
        (:initialized) var Steps as Symbol;
        (:initialized) var ColorBlue as Symbol;
        (:initialized) var SwitchForecastTitle as Symbol;
        (:initialized) var BackgroundColorTitle as Symbol;
        (:initialized) var ColorAqua as Symbol;
        (:initialized) var ColorDarkGray as Symbol;
        (:initialized) var IconSize as Symbol;
        (:initialized) var MilitaryFormatTitle as Symbol;
        (:initialized) var ColorBlack as Symbol;
        (:initialized) var ColorOrange as Symbol;
        (:initialized) var ColorYellow as Symbol;
        (:initialized) var AppName as Symbol;
        (:initialized) var Weather as Symbol;
        (:initialized) var ColorRed as Symbol;
        (:initialized) var ForegroundColorTitle as Symbol;
        (:initialized) var ColorLime as Symbol;
        (:initialized) var LowPowerModeTitle as Symbol;
        (:initialized) var ColorPink as Symbol;
        (:initialized) var ColorPurple as Symbol;
        (:initialized) var ColorWhite as Symbol;
        (:initialized) var ColorGrey as Symbol;
        (:initialized) var ColorGreen as Symbol;
        (:initialized) var AccentColorTitle as Symbol;
    } // Strings
} // Rez
